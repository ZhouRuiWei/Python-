
#-*- coding:utf-8 -*-
# 你作为一名出道的歌手终于要出自己的第一份专辑了，你计划收录 n 首歌而且每首歌的长度都是 s 秒，
#每首歌必须完整地收录于一张 CD 当中。每张 CD 的容量长度都是 L 秒，而且你至少得保证同一张 CD 
#内相邻两首歌中间至少要隔 1 秒。为了辟邪，你决定任意一张 CD 内的歌数不能被 13 这个数字整除，
#那么请问你出这张专辑至少需要多少张 CD ？
# 输入描述:
# 每组测试用例仅包含一组数据，每组数据第一行为三个正整数 n, s, L。 保证 n ≤ 100 , s ≤ L ≤ 10000 
# 输出描述:
# 输出一个整数代表你至少需要的 CD 数量。
# 输入例子:
# 7 2 6
# 输出例子:
# 4


import math

number = raw_input('')
n = int(number.split()[0])
s = int(number.split()[1])
l = int(number.split()[2])

m = round((l+1)/(s+1))  #每张所能存储最多的数量
if m%13 ==0:
	m = m-1

if n<m and n%13==0:      #一张就能存储万时，要看看总的是不是13的倍数，是的话需要加一
    answer = 2
elif n>=m and n%m == 13 and m%13==1:   
    answer = int(math.ceil(n/m))+1
else:
    answer  = int(math.ceil(n/m))
print answer

